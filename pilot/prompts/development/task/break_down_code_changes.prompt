あなたは現在の変更をコードベースに反映する必要がある:
-- 指示 --
{{ instructions }}
-- 指示終わり --

現在のフォルダツリーは以下の通り:
```
{{ directory_tree }}
```

あなたが使えるテクノロジーは以下の通り:
```
{% for technology in technologies %}
- {{ technology }}
{% endfor %}
```

まず、これらの指示を実行可能なステップに分解する必要がある。ステップには2種類ある。ファイルの内容を変更する必要がある場合、そのステップは `code_change` というタイプになり、コマンド（ファイルやフォルダの作成など）を実行する必要がある場合、そのステップは `run_command` というタイプになる。
ステップが実行可能であるためには、漠然とした説明ではだめで、そのステップを完了するために何をする必要があるのかを明確に説明する必要がある。以下は良いステップと悪いステップの例です:
悪いステップ: `mongo databaseをセットアップして下さい。`
良いステップ: `db.jsの中に、以下のコードを追記して下さい。: {ファイルに追加する必要があるコード}`

ステップを考えるときには、まずこのタスクを完了するためにどのファイルを変更する必要があるのかを考える。あなたが、どのような変更をする必要があるか決めたら、 `code_change` タイプのステップに、各ファイルのすべての変更をまとめる。

つまり、`code_change` タイプの各ステップは、1つのファイルに対して行われる必要があるすべての変更を含むことができる。複数の異なるファイルに変更を加える必要がある場合は、複数のステップに分ける必要がある。各ステップには、1つのファイルに対して行われる必要があるすべての変更が含まれる。

すべてのコマンドはプロジェクトのルートフォルダーから実行されることを忘れないでください。

それでは、ステップバイステップで考えて、実行する必要のあるステップのリストを返答して下さい。