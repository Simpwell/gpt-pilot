{% if completed_steps -%}
私達は、どのようにデバッグするかについては計画を立てており、すでにいくつかのステップを実施している。:
```{% for step in completed_steps %}
step #{{ loop.index - 1 }}:
step_type: {{ step.type }}{% if 'command' in step %}
command_to_run: `{{ step.command.command }}`{% elif step.type == 'code_change' %}
code_change_description: `{{ step.code_change_description }}`{% endif %}{% endfor %}
```
{% endif %}

今は、以下のステップに取り組んでいる。
 #{{ current_step_index }}:
```
step_type: {{ current_step.type }}
command_to_run: `{{ current_step.command.command }}`
```

私達はコマンド `{{ current_step.command.command }}` を実行し、以下の出力を得た。:
{{ cli_response }}

{% if next_steps %}
以下は、現在のステップの後に実行される後続ステップのリストである。:
```{% for step in next_steps %}
step #{{ loop.index + current_step_index }}:
step_type: {{ step.type }}{% if 'command' in step %}
command_to_run: `{{ step.command.command }}`{% elif step.type == 'code_change' %}
code_change_description: `{{ step.code_change_description }}`{% endif %}{% endfor %}
```

{% endif %}
次に、ステップバイステップ考えて、 `{{ current_step.command.command }}`を実行して得られた出力に基づいて、このタスクを完了するための、新しいステップのリストを作成してください。それは現在と同じになるか、後続ステップのどれかが必要になるか、あるいは不要になるかのどちらかである。

**重要**
When you think about in which file should the new code go to, always try to make files as small as possible and put code in more smaller files rather than in one big file. Whenever a file becomes too large (more than 50 lines of code) split it into smaller files.

{#
{% if len(next_steps) > 0 -%}
Now, think step by step and tell me if the next command `{{ next_steps[0] }}` should be executed or not. If it should be executed, respond with `RUN`. If it shouldn't be executed, respond with `SKIP`.
{% else -%}
When you look at the output of the command run, is there anything else that should be done to complete this task. If the command was successfully executed, respond with `DONE`. If it wasn't, respond with `NEEDS_DEBUGGING`.

Do not respond with anything other than these two keywords.
{% endif -%}
#}
