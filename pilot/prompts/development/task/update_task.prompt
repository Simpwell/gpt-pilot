{% if completed_steps -%}
私達は、どのようにデバッグするかについては計画を立てており、すでにいくつかのステップを実施している。:
```{% for step in completed_steps %}
step #{{ loop.index - 1 }}:
step_type: {{ step.type }}{% if 'command' in step %}
command_to_run: `{{ step.command.command }}`{% elif step.type == 'code_change' %}
code_change_description: `{{ step.code_change_description }}`{% endif %}{% endfor %}
```
{% endif %}

今は、以下のステップに取り組んでいる。
 #{{ current_step_index }}:
```
step_type: {{ current_step.type }}
command_to_run: `{{ current_step.command.command }}`
```

私達はコマンド `{{ current_step.command.command }}` を実行し、以下の出力を得た。:
{{ cli_response }}

{% if next_steps %}
以下は、現在のステップの後に実行される後続ステップのリストである。:
```{% for step in next_steps %}
step #{{ loop.index + current_step_index }}:
step_type: {{ step.type }}{% if 'command' in step %}
command_to_run: `{{ step.command.command }}`{% elif step.type == 'code_change' %}
code_change_description: `{{ step.code_change_description }}`{% endif %}{% endfor %}
```

{% endif %}
次に、ステップバイステップ考えて、 `{{ current_step.command.command }}`を実行して得られた出力に基づいて、このタスクを完了するための、新しいステップのリストを作成してください。それは現在と同じになるか、後続ステップのどれかが必要になるか、あるいは不要になるかのどちらかである。

**重要**
あなたが新しいコードをどのファイルに入れるべきかを考えるときは、常にできるだけファイルを小さくし、1つの大きなファイルにコードを入れるのではなく、より小さなファイルにコードを入れるようにする。 ファイルが大きくなりすぎたら（50行以上のコード）、小さなファイルに分割してください。

{#
{% if len(next_steps) > 0 -%}
次のコマンド`{{ next_steps[0] }}`を実行すべきかどうか、ステップバイステップで考えてみてください。実行すべきであれば `RUN` と答えなさい。 実行すべきでない場合は `SKIP` と答えなさい。
{% else -%}
コマンド実行の出力を見て、このタスクを完了するために他に何かすべきことはありませんか。コマンドが正常に実行された場合は `DONE` と応答する。うまくいかなかった場合は、`NEEDS_DEBUGGING`と応答する。

この2つのキーワード以外を返答してはならない。

{% endif -%}
#}
