{% if issue_description -%}
あなたは、私に以下をチェックしてほしい。 - `{{ issue_description }}` しかし、そこには問題があった。
{%- else -%}
了解。私たちは、この問題をデバッグする必要がある。
{%- endif -%}
{% if command %} そして、私たちは、`{{ command }}` を正しく実行できる必要がある。{% else %}.
何が起こっているのか、簡単に説明しよう:
```
{{ user_input }}
```
{% endif -%}
{{ context }}
この問題をデバッグするために必要なステップのリストを、あなたに作ってほしい。

ステップは`command`か`code_change`のどちらかである。

`command`ステップは、マシン上でコマンドを実行し、あなたが次に何をすれば良いか分かるようにCLIの出力をあなたに返す。コマンドは{{ os }}マシンで実行されることに注意。

`code_change`ステップはコードを修正する。あなたは、実装すべきことを徹底的に記述する必要がある。私は、要求された修正を行い、あなたに報告します。

また、少なくとも最後のステップでは確実に`check_if_fixed`をTRUEに設定していること。

**重要**
新しいコードをどのファイルに入れるべきかを考えるときは、できるだけファイルを小さくするように常に心がけて下さい。1つの大きなファイルにコードを入れるのではなく、より小さなファイルにコードを入れるようにして下さい。ファイルが大きくなりすぎたら（50行以上のコードになった場合）、小さなファイルに分割して下さい。

{# この後、次に何をするかを決める必要がある。問題が解決されたかどうかを確認するために`{{ command }}`コマンドを再実行するか、`run_command`で別のコマンドを実行するか、`implement_code_changes`でさらにコードを修正することができる。#}
